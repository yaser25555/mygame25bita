// ููู game.js: ูุฑุฌู ููู ุฌููุน ุฃููุงุฏ ุงูุฌุงูุงุณูุฑูุจุช ูู <script> ูู game.html ุฅูู ููุง. 

const BACKEND_URL = 'https://mygame25bita.onrender.com';

// Game State
let score = 0;
let highScore = 0;
let roundNumber = 1;
let username = '';
let isProcessingShot = false;

// ุชูุนูู ููุฒุฉ ุงูุทู ุนูุฏ ุชุญููู ุงูุตูุญุฉ
// (ุชู ููู ูุฐุง ุงูุฌุฒุก ุฅูู ููุงูุฉ ุงูููู ุจุนุฏ ุชุนุฑูู ุฌููุน ุงูุฏูุงู)

// ุถุน ูุฐุง ุงูุฌุฒุก ูู ููุงูุฉ ุงูููู ุจุนุฏ ุชุนุฑูู ุฌููุน ุงูุฏูุงู:
document.addEventListener('DOMContentLoaded', function() {
    console.log('๐ ุชุญููู ุงูุตูุญุฉ...');
    // ุชุฃุฎูุฑ ูููู ูุถูุงู ุชุญููู ุฌููุน ุงูุนูุงุตุฑ
    setTimeout(() => {
        // The game is ุจุงููุนู initialized with initGame() call above
        // Just initialize the additional features
        initializeItemInfoModal();
        initializeCollapseFeatures();
        // Uncomment the line below to test effects on page load
        // testEffects();
    }, 500);
});

// Item Info Modal Functions
function initializeItemInfoModal() {
    const modal = document.getElementById('itemInfoModal');
    const openBtn = document.getElementById('itemInfoBtn');
    const closeBtn = document.getElementById('itemInfoClose');
    openBtn.addEventListener('click', () => {
        populateItemInfoModal();
        modal.classList.add('show');
    });
    closeBtn.addEventListener('click', () => {
        modal.classList.remove('show');
    });
    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
        }
    });
}

function populateItemInfoModal() {
    const itemInfoGrid = document.getElementById('itemInfoGrid');
    const collectionGoalsList = document.getElementById('collectionGoalsList');
    // Clear previous content
    itemInfoGrid.innerHTML = '';
    collectionGoalsList.innerHTML = '';
    // Add item cards
    Object.entries(ITEM_REWARDS).forEach(([itemType, itemData]) => {
        const itemCard = document.createElement('div');
        itemCard.className = 'item-info-card';
        const pointsClass = itemData.points >= 0 ? 'positive' : 'negative';
        const pointsText = itemData.points >= 0 ? `+${itemData.points}` : `${itemData.points}`;
        itemCard.innerHTML = `
            <div class="item-info-emoji">${itemData.emoji}</div>
            <div class="item-info-details">
                <div class="item-info-name">${itemData.name}</div>
                <div class="item-info-description">${getItemDescription(itemType)}</div>
                <div class="item-info-points ${pointsClass}">${pointsText} ููุทุฉ</div>
            </div>
        `;
        itemInfoGrid.appendChild(itemCard);
    });
    // Add collection goals
    Object.entries(COLLECTION_GOALS).forEach(([itemType, goal]) => {
        const itemData = ITEM_REWARDS[itemType];
        if (!itemData) return; // Skip if not defined
        const goalItem = document.createElement('div');
        goalItem.className = 'collection-goal-item';
        goalItem.innerHTML = `
            <div class="collection-goal-info">
                <div class="collection-goal-emoji">${itemData.emoji}</div>
                <div class="collection-goal-text">ุงุฌูุน ${goal.target} ${goal.name}</div>
            </div>
            <div class="collection-goal-reward">+${goal.reward} ููุทุฉ</div>
        `;
        collectionGoalsList.appendChild(goalItem);
    });
}

function getItemDescription(itemType) {
    const descriptions = {
        gem: 'ุฌููุฑุฉ ุซูููุฉ ุชููุญู ููุงุท ุฅุถุงููุฉ. ุงุฌูุน 5 ุฌูุงูุฑ ููุญุตูู ุนูู ููุงูุฃุฉ ูุจูุฑุฉ!',
        key: 'ููุชุงุญ ุณุญุฑู ููุชุญ ุฃุจูุงุจ ุงูุซุฑูุฉ. ุงุฌูุน 3 ููุงุชูุญ ููุญุตูู ุนูู ููุงูุฃุฉ!',
        coin: 'ุนููุฉ ุฐูุจูุฉ ุชุฒูุฏ ูู ุฑุตูุฏู. ุฌูุน ุงููุฒูุฏ ูุนูู ุงููุฒูุฏ ูู ุงูููุงุท!',
        bomb: 'ููุจูุฉ ุฎุทูุฑุฉ! ุชุฌูุจูุง ุฃู ุณุชุฎุณุฑ ููุงุท. ูู ุญุฐุฑุงู!',
        star: 'ูุฌูุฉ ุณุงุทุนุฉ ุชููุญู ููุงุท ุนุงููุฉ. ุงุฌูุน ูุฌูุชูู ููุญุตูู ุนูู ููุงูุฃุฉ!',
        bat: 'ุฎูุงุด ุดุฑูุฑ ูุฎุตู ูู ููุงุทู. ุงุญุฐุฑ ููู!'
    };
    return descriptions[itemType] || 'ุนูุตุฑ ุบุงูุถ ูู ุงููุนุจุฉ.';
}

// ... existing code ... 